<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAOw0AADsNAWEPgO4AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAOxUlEQVR4Xu2deYxV5RmHX41NqlGrNjFptf2j8Q9tE5c0bWJiNFrrH02aNiZGAVcWAUEQN1YREEZA
        EXdZBwsiOgqyKLKD+4YgyqJVsK2N2tQldalV5pyvv3vnhZ5kxpnBgp573+dJnkwmOTf55vC9z/3u5M7F
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgbdIjdqIcmi+wJfl8e1Nf/5U/bCl/yG2SD7oP
        yHnu/XKue5+c486Wf3LvlbPcRjnTnSGny2nuVDnFvUfe7d4l73TvkLe7t8lb3cnyFneSvNm9SU7UzzJB
        P9NEW5zG2xB5gv/YAHFJU+17aaFdki+0V2XKH5EL3PmyfgKQFIAWx8sbq25KDXZR5R747QCIQ1psp+WL
        bWu+SMNQGf54AUh5Q9XNaayd6rcFoL5JyfbLltgYDX8mU/gAjKuaZTfYqMq98dsEUH+ktXZA9qjNyZdo
        01eGnwDsCkDKx1pSBOakUXaA3y6A+qH6zP+YNeaParMTgDYDkN+gCIy1mZwEoO5Ij9mV1eEnAO0GoGK6
        wQb6bQOofdIy+0X+mH1JAGQnApCPsS8VgeP89gHUNvlSW60AtAx/xwF4Oi2wQWm+nZoetmP19WetnNtJ
        G/fQuzvp5D3wZv0ME+20NF4noAn2TCcDkPLRtsJvH0Dtkh63UxSA1IkAvJ0W2pn+sLol3Whnafj/0okA
        pDTGTvaHAdQm2VKb14kAbNCz/pH+kLon3WRHKgAbOgpANtru84cA1B5piR2k4f+8gwC8r+uO8oeEIU2w
        oxWAf7QXAPlZusUO9IcA1BZpuf22OvztBCAtth5+eThSg/XuIAApjbbT/XKA2kKv/4d2EIAPKm8O8svD
        Ufk7AA3/hx0EYLBfDlBb6PV/Y3sByBbbHL80LNk4m9teALJRNsMvBagt8sdtYXsB0PF/pF8aFgVgVHsB
        yEfZI34pQG2hACxvNwCLrL9fGpY01vp3EIDlfilAbdFhAJZYP780LGmc9SMAUJcQgI4hAFC3EICOIQDQ
        KdJr9pO01c5NW2xk2mxT9f3s9Ko1Vd1UcKPcUHC9fKngC+7zBZ+VzxR8yn2y4Dq5tuBqa8orrnJXuMsL
        LrX32wuA3JAv0nULCy5w57sPuU0FH5DzCs517ys4W/6p4Cy3seAMOb3gVDml4N3uXQXvkLcXvNWdXHCS
        vLngRDmh4I1ugxyre9B+AN6XTVVHyusKDneHuUPcwQWvkVcXvNIdVHCgHFCwv9vP7ev2KXip7NVi1stm
        Zz1sihzZfIn2aE872rct/D9o2I/Q0A+Wm2XS90nD3+Jr8lV3k3zF3Sg3uC/L9fIl90X5gvu8fM59Vj7j
        Pi2fcp+UT7jr5Fp3jVytzVlxlVwpV7jL5TL3cdl+APhrwMrwtx+AlF/vjpTXuSPk8BazYXKoHOIOlte6
        18ir3avkle4geYU7UA5wL5f93X7yMtnX7SN7u5fKXm5P2cPtLi+p+lp2kV2betgRvp2hs6R37MC0zUan
        1+1TfU3V4S9jACrDTwAIQNsBSNnF8iL7JLvQrk8X2/d9e0N7pDftpPSGvaHhT1UJAAGo7QC0eKG9rgic
        6Nsc2kKD/8f0Z/tCX1uGnwAQgPoJQMousH83X2h/8O0ORTT4Z8tmmWomAPwOgADsWQAqNjdfYGf7tocK
        aYf9Wkf/L6rDX0sB4ARAAPY8ACk7X3u9m/3Kt39sNOSHpO22QwFoGX4CQADqPwAp62bb0zl2sI9BXDT8
        k9JbGigCQABiBaDiBB+DmGjQj9Lwf0kAXAIQKwDn23/SefZjH4d46Nl/fHX4CQABiHkCSFkXa/BxiEVK
        tr8C8PeaDsCuCBAAAvBNA9DV/ppG2f4+FnHQ0P9SAWgZfgJAAOIGIKUudryPRRzS2zaAAEgCED4AMt4H
        w2j47yEAkgAQgK52p49FHNIOW0QAJAEIH4C8S8DPPVQAVhEASQAIQFdb5WMRBw3/GgIgCQAB6GJrfCzi
        QABcAkAACIAkAASAAMSBALgEgAAQAEkACAABiAMBcAkAASAAkgAQAAIQBwLgEgACEDIAO+xBAiAJQPgA
        ZF1sno9FHNLbdh4BkAQgfACau9o5PhZx8M8DaCIAkgBEDsADyWw/H4tYVCPwlvWW6xSA7Rr+Ft+Qr7vb
        5JaCm93X5KvuJvmKu7Hgy3K9fMl9Ub7gPi+fLfiM+7R8yn1SPuGuK7hGrrbtGv4WV8oV7nL5eMGl7mPy
        UXeJXOwuKviIXODOlw/Lh9wm+UDBee79cq57n5zjzi54r5zlNsqZ7gw5XU4tOMW9R97t3iXvdO8oeJu8
        1Z0sb3EnyZvdie4Ed7y80W2Q49yxBcfI0e4oeb07Ul7nDv+fCsB2BWC7hr/FwfJa95qCV8kr3UHyCneg
        HOD2L9hPXib7un1kb/fSgj1lD7e7vMS9WF7kXlDwfK27m61t7ma9Qn4YCAAAAAAAAAAAAAAAAAAAAMQm
        bbEG3gno8k7Asr8TMOZ/97UvIQCSABCAqBAASQAIQFQIgCQABCAqBEASAAIQFQIgCQABiAoBkASAAESF
        AEgCQACiQgAkASAAUSEAkgAQgKgQAEkACEBUCIAkAAQgKgRAEgACEBUCIAkAAYgKAZAEgABEhQBIAkAA
        olKiAHyl4Z8j+8qLs1V2mwLweY0F4LNspt2TZljPNM16ZdNsigLweY0F4AMN/i1pmP4NhlrffJg1afhz
        AlCnlCQAn8pTfEm7SSvtpxr+bTURgFn2bpplx/rSd5Om23EKwPs1EoAtGvwf+dJ3s3OInaEAfE4A6pBS
        BGCNDfPltEIROKUWApAarYsvuRU6DXSrhQCk6+xkX3IrNPwjCEAdUpITQKtnziIa/vdKHoAsNdmBvtxW
        pKl2kIY/K3kA3vXltkkaaj8nAHVISQJwmC+nTXQC2FDyAHzkS/1aNPwflTwAG3ypbZJG2WEEoA4pRQCW
        2qG+nDZRANaXPAAf+FK/Fg3/ByUPwHpfapsoAIcSgDqEAEgCQACiQgAkASAAUSEAkgAQgKgQAEkACEBU
        CIAkAAQgKgRAEgACEBUCIAkAAYgKAZAEgABEhQBIAkAAokIAJAEgAFEhAJIAEICoEABJAAhAVAiAJAAE
        ICoEQBIAAhAVAiAJAAGICgGQBIAARIUASAJAAKJCACQBIABRIQCSABCAqBAASQAIQFQIgCQABCAqBEAS
        AAIQFQIgCQABiAoBkASAAESFAEgCQACiQgAkASAAUSEAkgAQgKgQAEkACEBUCIAkAAQgKgRAEgACEBUC
        IAkAAYgKAZAEgABEhQBIAkAAokIAJAEgAFEhAJIAEICoEABJAAhAVAiAJAAEICoEQBIAAhAVAiAJAAGI
        CgGQBIAARIUASAJAAKJCACQBIABRIQCSABCAqBAASQAIQFQIgCQABCAqBEASAAIQFQIgCQABiAoBkASA
        AESFAEgCQACiQgAkASAAUSEAkgAQgKgQAEkACEBUCIAkAAQgKgRAEgACEBUCIAkAAYgKAZAEgABEhQBI
        AkAAokIAJAEgAFEhAJIAEICoEABJAAhAVAiAJAAEICoEQBIAAhAVAiAJAAGICgGQBIAARIUASAJAAKJC
        ACQBIABRIQCSABCAqBAASQAIQFQIgCQABCAqBEASAAIQFQIgCQABiAoBkASAAESFAEgCQACiQgAkASAA
        USEAkgAQgKgQAEkACEBUCIAkAAQgKgRAEgACEBUCIAkAAYgKAZAEgABEhQBIAkAAokIAJAEgAFEhAJIA
        EICoEABJAAhAVAiAJAAEICoEQBIAAhAVAiAJAAGICgGQBIAARIUASAJAAKJCACQBIABRIQCSABCAqBAA
        SQAIQFQIgCQABCAqBEASAAIQFQIgCQABiAoBkASAAESFAEgCQACiQgAkASAAUSEAkgAQgKgQAEkACEBU
        CIAkAAQgKgRAEgACEBUCIAkAAYgKAZAEgABEhQBIAkAAokIAJAEgAFEhAJIAEICoEABJAAhAVAiAJAAE
        ICoEQBIAAhAVAiAJAAGICgGQBIAARIUASAJAAKJCACQBIABRIQCSABCAqBAASQAIQFRKEYCn7HBfTpso
        AK+UPAAf+1K/Fg3/x6UOwAjb6EttkzTEDicAdUgpArDGTvDltELPPPsrAB+WPAB5mmo/8CW3Is2ywzT8
        eclPAP+s3GtfcisUgJMIQB1SigCstZt8Oa1Iy+33CkAqeQCShvwyX3IrFIf+1eEvdwBSGmG/8yW3QsM/
        iQDUISUJwE6dArr6knaTltkJGvz3aiEAeaN9mmba6b703aQp9pt8qn1WCwGQ76ZhdrwvfTfNg+38bIg1
        E4A6pCQB2OWzaZVNzFbZmHylLZI7q8NfGwFI+Uwd8xttRTbDGrJp1pBPs5UyVwBahr/8Aaj8LuCrfJgt
        ykbYmGy43dQ8xJ7T8KeqBKD+KFUA1sjV2oQVV8mVsrYC0OIMOV1Oc2srACkf3mI2TA6VBKB+IQCSABCA
        qBAASQAIQFQIgCQABCAqBEASAAIQFQIgCQABiAoBkASAAESFAEgCQACikrbZSALgEoCyB2CEb1vYW6St
        1o8AuASg7AHo69sW9hY6AZxFAFwCUOoA7OxuZ/q2hb2Fhv8ImREASQDKHIDm1LX9z42Ab4gCsJ4ASAJQ
        2gA0d7fnfbvC3kYBuIoASAJQ5hPAFb5dYW9TfRmw2T4lAJIAlDEAn6UL7Ye+XWFfoOEfX5oAVIafABCA
        XQHoaeN8m8K+Ir1uhygA7xAAlwCUJQB/S5fZwb5NYV+SttqpCkAzAZAEoAwByHb2tDN8e8K3gQLQhwBI
        AlCGAAzwbQnfJhr8axSA/DsLwK4IEICoAcjl1b4d4btAw3+e/IQTgCQA32YAPmnuaef6NoTvkrTFjtHw
        ryAAkgDs8wDkvW1Z6mHH+PaDsqAAnKUArNTwZ99KAHgJECkAWd7HVuzsxfv8S49eEhytAPRVAOYpAJs0
        /B/JjBOAJACdCUAmP1QAXlEA7tfw90mX29G+vQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        9iFm/wUls04iKvc4xQAAAABJRU5ErkJggg==
</value>
  </data>
</root>